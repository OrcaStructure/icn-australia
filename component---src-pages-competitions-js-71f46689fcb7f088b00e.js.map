{"version":3,"file":"component---src-pages-competitions-js-71f46689fcb7f088b00e.js","mappings":"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","sources":["webpack://icn-australia/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://icn-australia/./node_modules/motion-utils/dist/es/memo.mjs","webpack://icn-australia/./node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","webpack://icn-australia/./node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs","webpack://icn-australia/./node_modules/motion-dom/dist/es/animation/controls/Group.mjs","webpack://icn-australia/./node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","webpack://icn-australia/./node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","webpack://icn-australia/./node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","webpack://icn-australia/./node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","webpack://icn-australia/./node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","webpack://icn-australia/./node_modules/motion-dom/dist/es/utils/supports/flags.mjs","webpack://icn-australia/./node_modules/motion-dom/dist/es/utils/supports/memo.mjs","webpack://icn-australia/./node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","webpack://icn-australia/./node_modules/motion-utils/dist/es/progress.mjs","webpack://icn-australia/./node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","webpack://icn-australia/./node_modules/motion-dom/dist/es/animation/waapi/utils/easing.mjs","webpack://icn-australia/./node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","webpack://icn-australia/./node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","webpack://icn-australia/./node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","webpack://icn-australia/./node_modules/motion-dom/dist/es/gestures/hover.mjs","webpack://icn-australia/./node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","webpack://icn-australia/./node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","webpack://icn-australia/./node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","webpack://icn-australia/./node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","webpack://icn-australia/./node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","webpack://icn-australia/./node_modules/motion-dom/dist/es/gestures/press/index.mjs","webpack://icn-australia/./node_modules/motion-utils/dist/es/time-conversion.mjs","webpack://icn-australia/./node_modules/motion-utils/dist/es/noop.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/frameloop/order.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/stats/buffer.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","webpack://icn-australia/./node_modules/motion-utils/dist/es/errors.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/stats/animation-count.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/mix/number.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/mix/color.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/mix/complex.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/mix/index.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://icn-australia/./node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/frameloop/microtask.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/svg/utils/measure.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/components/create-factory.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/components/motion/create.mjs","webpack://icn-australia/./src/components/StateCard.js","webpack://icn-australia/./src/components/CompetitionList.js","webpack://icn-australia/./src/components/ScheduleList.js","webpack://icn-australia/./src/pages/competitions.js","webpack://icn-australia/./node_modules/core-js/internals/array-method-is-strict.js","webpack://icn-australia/./node_modules/core-js/internals/array-slice.js","webpack://icn-australia/./node_modules/core-js/internals/array-sort.js","webpack://icn-australia/./node_modules/core-js/internals/classof.js","webpack://icn-australia/./node_modules/core-js/internals/delete-property-or-throw.js","webpack://icn-australia/./node_modules/core-js/internals/environment-ff-version.js","webpack://icn-australia/./node_modules/core-js/internals/environment-is-ie-or-edge.js","webpack://icn-australia/./node_modules/core-js/internals/environment-webkit-version.js","webpack://icn-australia/./node_modules/core-js/internals/to-string-tag-support.js","webpack://icn-australia/./node_modules/core-js/internals/to-string.js","webpack://icn-australia/./node_modules/core-js/modules/es.array.sort.js"],"sourcesContent":["\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const parent = element.offsetParent;\n            const parentWidth = parent instanceof HTMLElement ? parent.offsetWidth || 0 : 0;\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n            size.right = parentWidth - size.width - size.left;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent, anchorX }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        right: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left, right } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        const x = anchorX === \"left\" ? `left: ${left}` : `right: ${right}`;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            ${x}px !important;\n            top: ${top}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useCallback, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, anchorX, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const memoizedOnExitComplete = useCallback((childId) => {\n        presenceChildren.set(childId, true);\n        for (const isComplete of presenceChildren.values()) {\n            if (!isComplete)\n                return; // can stop searching when any is incomplete\n        }\n        onExitComplete && onExitComplete();\n    }, [presenceChildren, onExitComplete]);\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: memoizedOnExitComplete,\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout\n        ? [Math.random(), memoizedOnExitComplete]\n        : [isPresent, memoizedOnExitComplete]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = (jsx(PopChild, { isPresent: isPresent, anchorX: anchorX, children: children }));\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe)\n            register(id);\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { usePresence } from './use-presence.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, anchorX = \"left\", }) => {\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return null;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = propagate && !isParentPresent\n                ? false\n                : presentChildren === renderedChildren ||\n                    presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender === null || forceRender === void 0 ? void 0 : forceRender();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    propagate && (safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove());\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, anchorX: anchorX, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\nexport { GroupPlaybackControls };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { progress } from 'motion-utils';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from './linear.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(elementOrSelector, onPressStart, options = {}) {\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\n    const startPress = (startEvent) => {\n        const element = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\n            return;\n        isPressing.add(element);\n        const onPressEnd = onPressStart(element, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\n                return;\n            }\n            isPressing.delete(element);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, options.useGlobalTarget ||\n                isNodeOrChild(element, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    elements.forEach((element) => {\n        if (!isElementKeyboardAccessible(element) &&\n            element.getAttribute(\"tabindex\") === null) {\n            element.tabIndex = 0;\n        }\n        const target = options.useGlobalTarget ? window : element;\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","const stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"12.4.0\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { activeAnimations } from '../../stats/animation-count.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        activeAnimations.mainThread++;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !transformTemplate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from 'motion-dom';\nimport { activeAnimations } from '../../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../../stats/buffer.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const animation = element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from 'motion-utils';\nimport { setDragLock } from 'motion-dom';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { isCSSVariableName } from '../../render/dom/utils/is-css-variable.mjs';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { getValueTransition } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    var _a, _b;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\n\nexport { updateSVGDimensions };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"12.4.0\", `Attempting to mix Motion versions ${nextValue.version} with 12.4.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n        this.updateDimensions = () => {\n            if (this.current && !this.renderState.dimensions) {\n                updateSVGDimensions(this.current, this.renderState);\n            }\n        };\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    onBindTransform() {\n        if (this.current && !this.renderState.dimensions) {\n            frame.postRender(this.updateDimensions);\n        }\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","import React from \"react\";\nimport { Card, Heading, Box, Image } from \"theme-ui\";\nimport { motion } from \"framer-motion\";\n\nconst StateCard = ({ state, onClick }) => {\n  console.log(\"Rendering StateCard:\", state); // Debug log\n\n  return (\n    <Card\n      as={motion.div}\n      whileHover={{ scale: 1.05 }}\n      whileTap={{ scale: 0.95 }}\n      onClick={() => {\n        console.log(\"StateCard Clicked:\", state); // Debug log\n        if (onClick) {\n          onClick(state);\n        } else {\n          console.warn(\"onClick function is missing!\");\n        }\n      }}\n      sx={{\n        cursor: \"pointer\",\n        padding: \"15px\",\n        boxShadow: \"0px 4px 10px rgba(0,0,0,0.2)\",\n        borderRadius: \"50%\", // Fully rounded shape\n        textAlign: \"center\",\n        backgroundColor: \"#f8f9fa\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"200px\", // Smaller height\n        width: \"200px\", // Less wide\n        margin: \"10px\", // More spacing between cards\n      }}\n    >\n      {state.logo?.file.url && (\n        <Image\n          src={state.logo.file.url}\n          alt={`${state.name} Logo`}\n          sx={{ width: \"100px\", height: \"100px\", marginBottom: \"10px\" }} // Larger logo\n        />\n      )}\n      <Heading as=\"h3\" sx={{ fontSize: \"16px\", textAlign: \"center\" }}>\n        {state.name || \"Unnamed State\"}\n      </Heading>\n    </Card>\n  );\n};\n\nexport default StateCard;\n","/** @jsxImportSource theme-ui */\nimport React from \"react\";\nimport { Box, Card, Heading, Text, Button, Flex, Image, Link } from \"theme-ui\";\nimport { motion } from \"framer-motion\";\n\nconst CompetitionList = ({ state, competitions, onBack }) => {\n  return (\n    <motion.div\n      key=\"competition-list\"\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      exit={{ opacity: 0, y: -20 }}\n    >\n      <Button\n        onClick={onBack}\n        sx={{\n          marginBottom: \"20px\",\n          backgroundColor: \"primary\",\n          color: \"white\",\n          cursor: \"pointer\",\n        }}\n      >\n        Back to Region Selection\n      </Button>\n\n        <br></br>\n      {/* Display state website if available */}\n      {state.website && (\n        <Text sx={{ marginBottom: \"20px\" }}>\n          Visit the official website:{\" \"}\n          <Link href={state.website} target=\"_blank\" rel=\"noopener noreferrer\">\n            {state.website}\n          </Link>\n        </Text>\n      )}\n         <br></br>\n\n      {competitions.length > 0 ? (\n        <Box\n          sx={{\n            display: \"grid\",\n            gridTemplateColumns: \"repeat(2, 1fr)\", // Two cards per row\n            gap: \"20px\",\n          }}\n        >\n          {competitions.map((comp) => (\n            <Card\n              key={comp.id}\n              as={motion.div}\n              whileHover={{ scale: 1.02 }}\n              whileTap={{ scale: 0.98 }}\n              sx={{\n                padding: \"20px\",\n                boxShadow: \"0px 4px 10px rgba(0,0,0,0.2)\",\n                borderRadius: \"10px\",\n                backgroundColor: \"white\",\n                display: \"flex\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                gap: \"20px\",\n                height: \"350px\", // ⬆️ Increased height for taller cards\n              }}\n            >\n              {comp.poster?.file.url && (\n                <Image\n                  src={comp.poster.file.url}\n                  alt={`${comp.competitionName} Poster`}\n                  sx={{\n                    width: \"300px\", // Slightly bigger poster\n                    borderRadius: \"5px\",\n                    flexShrink: 0,\n                  }}\n                />\n              )}\n              <Box sx={{ flex: 1, textAlign: \"left\", height: \"100%\" }}>\n                <Heading as=\"h3\" sx={{ fontSize: \"22px\", marginBottom: \"10px\" }}>\n                  {comp.competitionName}\n                </Heading>\n                <Text sx={{ fontSize: \"16px\", color: \"#555\", marginBottom: \"8px\" }}>\n                  📍 Location: {comp.location || \"TBA\"}\n                </Text>\n                <Text sx={{ fontSize: \"16px\", color: \"#555\", marginBottom: \"8px\" }}>\n                  📅 Date: {comp.date || \"TBA\"}\n                </Text>\n                <Text sx={{ fontSize: \"14px\", color: \"#777\" }}>\n                  ℹ️ More details will be announced soon.\n                </Text>\n              </Box>\n            </Card>\n          ))}\n        </Box>\n      ) : (\n        <Text>No competitions available for {state.name}.</Text>\n      )}\n    </motion.div>\n  );\n};\n\nexport default CompetitionList;\n","// ScheduleList.js (Create this new component)\n/** @jsxImportSource theme-ui */\nimport React from \"react\";\nimport { Box, Card, Heading, Text, Image } from \"theme-ui\"; // Removed Button and Flex\nimport { motion } from \"framer-motion\";\n\nconst ScheduleList = ({ competitions }) => {\n  return (\n    <motion.div\n      key=\"schedule-list\"\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      exit={{ opacity: 0, y: -20 }}\n    >\n      {competitions.length > 0 ? (\n        <Box\n          sx={{\n            display: \"grid\",\n            gridTemplateColumns: \"repeat(2, 1fr)\", // Two cards per row\n            gap: \"20px\",\n          }}\n        >\n          {competitions.map((comp) => (\n            <Card\n              key={comp.id}\n              as={motion.div}\n              whileHover={{ scale: 1.02 }}\n              whileTap={{ scale: 0.98 }}\n              sx={{\n                padding: \"20px\",\n                boxShadow: \"0px 4px 10px rgba(0,0,0,0.2)\",\n                borderRadius: \"10px\",\n                backgroundColor: \"white\",\n                display: \"flex\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                gap: \"20px\",\n                height: \"350px\",\n              }}\n            >\n              {comp.poster?.file.url && (\n                <Image\n                  src={comp.poster.file.url}\n                  alt={`${comp.competitionName} Poster`}\n                  sx={{\n                    width: \"300px\",\n                    borderRadius: \"5px\",\n                    flexShrink: 0,\n                  }}\n                />\n              )}\n              <Box sx={{ flex: 1, textAlign: \"left\", height: \"100%\" }}>\n                <Heading as=\"h3\" sx={{ fontSize: \"22px\", marginBottom: \"10px\" }}>\n                  {comp.competitionName}\n                </Heading>\n                <Text sx={{ fontSize: \"16px\", color: \"#555\", marginBottom: \"8px\" }}>\n                  📍 Location: {comp.location || \"TBA\"}\n                </Text>\n                <Text sx={{ fontSize: \"16px\", color: \"#555\", marginBottom: \"8px\" }}>\n                  📅 Date: {comp.date || \"TBA\"}\n                </Text>\n                 <Text sx={{ fontSize: \"14px\", color: \"#777\" }}>\n                  ℹ️ More details will be announced soon.\n                </Text>\n              </Box>\n            </Card>\n          ))}\n        </Box>\n      ) : (\n        <Text>No competitions scheduled yet.</Text>\n      )}\n    </motion.div>\n  );\n};\n\nexport default ScheduleList;","/** @jsxImportSource theme-ui */\nimport React, { useState, useEffect } from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { Box, Heading, Button, Flex } from \"theme-ui\";\nimport { AnimatePresence } from \"framer-motion\";\nimport StateCard from \"../components/StateCard\";\nimport CompetitionList from \"../components/CompetitionList\";\nimport ScheduleList from \"../components/ScheduleList\";\nimport { useLocation } from \"@reach/router\"; // Import useLocation\n\n\nconst CompetitionsPage = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allContentfulState {\n        nodes {\n          id\n          name\n          symbol\n          website\n          logo {\n            file {\n              url\n            }\n          }\n        }\n      }\n      allContentfulCompetition {\n        nodes {\n          id\n          competitionName\n          date\n          location\n          poster {\n            file {\n              url\n            }\n          }\n          state {\n            id\n          }\n        }\n      }\n    }\n  `);\n  const states = data.allContentfulState.nodes;\n  const competitions = data.allContentfulCompetition.nodes;\n\n  const [selectedState, setSelectedState] = useState(null);\n  // Get the location object\n  const location = useLocation();\n\n    // Read the 'view' query parameter on initial load\n    const [viewMode, setViewMode] = useState(() => {\n      const params = new URLSearchParams(location.search);\n      return params.get(\"view\") === \"schedule\" ? \"schedule\" : \"state\";\n    });\n\n\n    // Ensure a default view. If in schedule mode, don't let a state be selected.\n    useEffect(() => {\n        if (viewMode === \"schedule\") {\n            setSelectedState(null);\n        }\n    }, [viewMode]);\n\n  const filteredCompetitions = selectedState\n    ? competitions.filter((comp) => comp.state?.id === selectedState.id)\n    : [];\n\n    // Sort competitions by date for the schedule view.  Handle null dates.\n    const sortedCompetitions = [...competitions].sort((a, b) => {\n        if (!a.date) return 1;  // Put items with no date at the end\n        if (!b.date) return -1;\n        return new Date(a.date) - new Date(b.date);\n    });\n\n  return (\n    <Box sx={{ width: \"100%\", maxWidth: \"1200px\", margin: \"0 auto\", padding: \"20px\", textAlign: \"center\" }}>\n        <Heading as=\"h1\" sx={{ fontSize: \"32px\", marginBottom: \"20px\" }}>\n        {selectedState\n          ? `Competitions in ${selectedState.name}`\n          : (viewMode === \"state\" ? \"Select a Region to View Competitions\" : \"Full Competition Schedule\")}\n      </Heading>\n\n      {/* View Mode Toggle Buttons */}\n      <Flex sx={{ justifyContent: \"center\", gap: 3, mb: 4 }}>\n        <Button\n          onClick={() => setViewMode(\"state\")}\n          sx={{\n            backgroundColor: viewMode === \"state\" ? \"primary\" : \"#bbb\",\n            color: \"white\",\n            padding: \"14px 28px\",\n            borderRadius: \"8px\",\n            cursor: \"pointer\",\n            fontSize: \"16px\",\n            fontWeight: \"bold\",\n            transition: \"background-color 0.3s ease-in-out\",\n            \"&:hover\": {\n              backgroundColor: viewMode === \"state\" ? \"primary\" : \"#999\",\n            },\n          }}\n        >\n          Competitions Near You\n        </Button>\n        <Button\n          onClick={() => setViewMode(\"schedule\")}\n          sx={{\n            backgroundColor: viewMode === \"schedule\" ? \"primary\" : \"#bbb\",\n            color: \"white\",\n            padding: \"14px 28px\",\n            borderRadius: \"8px\",\n            cursor: \"pointer\",\n            fontSize: \"16px\",\n            fontWeight: \"bold\",\n            transition: \"background-color 0.3s ease-in-out\",\n            \"&:hover\": {\n              backgroundColor: viewMode === \"schedule\" ? \"primary\" : \"#999\",\n            },\n          }}\n        >\n          See Full Schedule\n        </Button>\n      </Flex>\n\n\n      {/* State Selection (only in state view mode) */}\n      <AnimatePresence mode=\"wait\">\n        {viewMode === \"state\" && !selectedState && (\n          <Box\n            key=\"state-selection\"\n            sx={{\n              display: \"grid\",\n              gridTemplateColumns: \"repeat(auto-fit, minmax(250px, 1fr))\",\n              gap: \"20px\",\n            }}\n          >\n            {states.map((state) => (\n              <StateCard\n                key={state.id}\n                state={state}\n                onClick={() => {\n                  setSelectedState(state);\n                }}\n              />\n            ))}\n          </Box>\n        )}\n      </AnimatePresence>\n\n      {/* Competition Display (state view) */}\n      <AnimatePresence mode=\"wait\">\n        {viewMode === \"state\" && selectedState && (\n          <CompetitionList\n            state={selectedState}\n            competitions={filteredCompetitions}\n            onBack={() => setSelectedState(null)}\n          />\n        )}\n      </AnimatePresence>\n\n      {/* Schedule Display (schedule view) */}\n      <AnimatePresence mode=\"wait\">\n        {viewMode === \"schedule\" && (\n          <ScheduleList competitions={sortedCompetitions} />\n        )}\n      </AnimatePresence>\n    </Box>\n  );\n};\n\nexport default CompetitionsPage;","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = function (METHOD_NAME, argument) {\n  var method = [][METHOD_NAME];\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call -- required for testing\n    method.call(null, argument || function () { return 1; }, 1);\n  });\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = uncurryThis([].slice);\n","'use strict';\nvar arraySlice = require('../internals/array-slice');\n\nvar floor = Math.floor;\n\nvar sort = function (array, comparefn) {\n  var length = array.length;\n\n  if (length < 8) {\n    // insertion sort\n    var i = 1;\n    var element, j;\n\n    while (i < length) {\n      j = i;\n      element = array[i];\n      while (j && comparefn(array[j - 1], element) > 0) {\n        array[j] = array[--j];\n      }\n      if (j !== i++) array[j] = element;\n    }\n  } else {\n    // merge sort\n    var middle = floor(length / 2);\n    var left = sort(arraySlice(array, 0, middle), comparefn);\n    var right = sort(arraySlice(array, middle), comparefn);\n    var llength = left.length;\n    var rlength = right.length;\n    var lindex = 0;\n    var rindex = 0;\n\n    while (lindex < llength || rindex < rlength) {\n      array[lindex + rindex] = (lindex < llength && rindex < rlength)\n        ? comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++]\n        : lindex < llength ? left[lindex++] : right[rindex++];\n    }\n  }\n\n  return array;\n};\n\nmodule.exports = sort;\n","'use strict';\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar isCallable = require('../internals/is-callable');\nvar classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar $Object = Object;\n\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) === 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = $Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) === 'Object' && isCallable(O.callee) ? 'Arguments' : result;\n};\n","'use strict';\nvar tryToString = require('../internals/try-to-string');\n\nvar $TypeError = TypeError;\n\nmodule.exports = function (O, P) {\n  if (!delete O[P]) throw new $TypeError('Cannot delete property ' + tryToString(P) + ' of ' + tryToString(O));\n};\n","'use strict';\nvar userAgent = require('../internals/environment-user-agent');\n\nvar firefox = userAgent.match(/firefox\\/(\\d+)/i);\n\nmodule.exports = !!firefox && +firefox[1];\n","'use strict';\nvar UA = require('../internals/environment-user-agent');\n\nmodule.exports = /MSIE|Trident/.test(UA);\n","'use strict';\nvar userAgent = require('../internals/environment-user-agent');\n\nvar webkit = userAgent.match(/AppleWebKit\\/(\\d+)\\./);\n\nmodule.exports = !!webkit && +webkit[1];\n","'use strict';\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\nmodule.exports = String(test) === '[object z]';\n","'use strict';\nvar classof = require('../internals/classof');\n\nvar $String = String;\n\nmodule.exports = function (argument) {\n  if (classof(argument) === 'Symbol') throw new TypeError('Cannot convert a Symbol value to a string');\n  return $String(argument);\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar aCallable = require('../internals/a-callable');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar deletePropertyOrThrow = require('../internals/delete-property-or-throw');\nvar toString = require('../internals/to-string');\nvar fails = require('../internals/fails');\nvar internalSort = require('../internals/array-sort');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar FF = require('../internals/environment-ff-version');\nvar IE_OR_EDGE = require('../internals/environment-is-ie-or-edge');\nvar V8 = require('../internals/environment-v8-version');\nvar WEBKIT = require('../internals/environment-webkit-version');\n\nvar test = [];\nvar nativeSort = uncurryThis(test.sort);\nvar push = uncurryThis(test.push);\n\n// IE8-\nvar FAILS_ON_UNDEFINED = fails(function () {\n  test.sort(undefined);\n});\n// V8 bug\nvar FAILS_ON_NULL = fails(function () {\n  test.sort(null);\n});\n// Old WebKit\nvar STRICT_METHOD = arrayMethodIsStrict('sort');\n\nvar STABLE_SORT = !fails(function () {\n  // feature detection can be too slow, so check engines versions\n  if (V8) return V8 < 70;\n  if (FF && FF > 3) return;\n  if (IE_OR_EDGE) return true;\n  if (WEBKIT) return WEBKIT < 603;\n\n  var result = '';\n  var code, chr, value, index;\n\n  // generate an array with more 512 elements (Chakra and old V8 fails only in this case)\n  for (code = 65; code < 76; code++) {\n    chr = String.fromCharCode(code);\n\n    switch (code) {\n      case 66: case 69: case 70: case 72: value = 3; break;\n      case 68: case 71: value = 4; break;\n      default: value = 2;\n    }\n\n    for (index = 0; index < 47; index++) {\n      test.push({ k: chr + index, v: value });\n    }\n  }\n\n  test.sort(function (a, b) { return b.v - a.v; });\n\n  for (index = 0; index < test.length; index++) {\n    chr = test[index].k.charAt(0);\n    if (result.charAt(result.length - 1) !== chr) result += chr;\n  }\n\n  return result !== 'DGBEFHACIJK';\n});\n\nvar FORCED = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || !STRICT_METHOD || !STABLE_SORT;\n\nvar getSortCompare = function (comparefn) {\n  return function (x, y) {\n    if (y === undefined) return -1;\n    if (x === undefined) return 1;\n    if (comparefn !== undefined) return +comparefn(x, y) || 0;\n    return toString(x) > toString(y) ? 1 : -1;\n  };\n};\n\n// `Array.prototype.sort` method\n// https://tc39.es/ecma262/#sec-array.prototype.sort\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  sort: function sort(comparefn) {\n    if (comparefn !== undefined) aCallable(comparefn);\n\n    var array = toObject(this);\n\n    if (STABLE_SORT) return comparefn === undefined ? nativeSort(array) : nativeSort(array, comparefn);\n\n    var items = [];\n    var arrayLength = lengthOfArrayLike(array);\n    var itemsLength, index;\n\n    for (index = 0; index < arrayLength; index++) {\n      if (index in array) push(items, array[index]);\n    }\n\n    internalSort(items, getSortCompare(comparefn));\n\n    itemsLength = lengthOfArrayLike(items);\n    index = 0;\n\n    while (index < itemsLength) array[index] = items[index++];\n    while (index < arrayLength) deletePropertyOrThrow(array, index++);\n\n    return array;\n  }\n});\n"],"names":["LayoutGroupContext","createContext","useConstant","init","ref","useRef","current","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","PopChildMeasure","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","isPresent","parent","offsetParent","parentWidth","HTMLElement","offsetWidth","size","sizeRef","height","offsetHeight","width","top","offsetTop","left","offsetLeft","right","componentDidUpdate","render","children","PopChild","anchorX","id","useId","nonce","useContext","useInsertionEffect","x","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","jsx","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","memoizedOnExitComplete","useCallback","childId","set","isComplete","values","context","useMemo","register","delete","Math","random","forEach","_","key","Provider","value","Map","usePresence","subscribe","useEffect","safeToRemove","getChildKey","child","onlyElements","filtered","Children","isValidElement","push","isBrowser","window","useIsomorphicLayoutEffect","useLayoutEffect","AnimatePresence","propagate","isParentPresent","presentChildren","presentKeys","map","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","renderedChildren","setRenderedChildren","i","length","includes","get","join","exitingChildren","nextChildren","splice","forceRender","Fragment","undefined","has","isEveryExitComplete","isExitComplete","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","args","_target","isAnimationControls","v","start","getValueState","visualElement","state","getVelocity","resolveVariantFromProps","definition","velocity","variants","resolveVariant","getProps","memo","callback","result","supportsScrollTimeline","ScrollTimeline","constructor","animations","stop","runAll","filter","Boolean","finished","Promise","all","animation","getAll","propName","setAll","newValue","attachTimeline","timeline","fallback","subscriptions","cancel","time","speed","startTime","duration","max","methodName","controls","flatten","play","pause","complete","GroupPlaybackControls","then","onResolve","onReject","catch","transition","maxGeneratorDuration","calcGeneratorDuration","generator","next","done","Infinity","isGenerator","type","onfinish","isBezierDefinition","easing","Array","isArray","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","_a","supportsLinearEasing","animate","opacity","e","progress","from","to","toFromDifference","generateLinearEasing","resolution","points","numPoints","round","substring","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","a","b","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","segmentEasing","isDragging","y","isDragActive","setupGesture","elementOrSelector","options","elements","scope","selectorCache","Element","root","querySelectorAll","resolveElements","gestureAbortController","AbortController","passive","signal","abort","isValidHover","event","pointerType","isNodeOrChild","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","Set","isPressing","WeakSet","filterEvents","firePointerEvent","target","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","onPressStart","eventOptions","cancelEvents","startPress","startEvent","currentTarget","add","onPressEnd","onPointerEnd","endEvent","success","removeEventListener","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","addEventListener","tagName","tabIndex","isElementKeyboardAccessible","getAttribute","focusEvent","handleKeydown","handleKeyup","enableKeyboardPress","seconds","millisecondsToSeconds","milliseconds","any","transformPropOrder","transformProps","positionalKeys","isKeyframesTarget","MotionGlobalConfig","stepsOrder","statsBuffer","addProjectionMetrics","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","stepName","thisFrame","nextFrame","flushNextFrame","toKeepAlive","latestFrameData","numCalls","triggerCallback","step","schedule","keepAlive","immediate","queue","process","frameData","frameloop","clear","createRenderStep","read","resolveKeyframes","update","preRender","postRender","processBatch","performance","now","min","cancelFrame","frameSteps","requestAnimationFrame","clearTime","newTime","queueMicrotask","addUniqueItem","arr","item","indexOf","removeItem","index","SubscriptionManager","handler","notify","numSubscriptions","getSize","velocityPerSecond","frameDuration","collectMotionValues","MotionValue","version","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","prev","setCurrent","change","renderRequest","hasAnimated","owner","isNaN","parseFloat","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","getPrevious","startAnimation","resolve","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","setMotionValue","hasValue","getValue","addValue","isMotionValue","addValueToWillChange","willChange","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","instantAnimationState","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","backInOut","anticipate","pow","sin","acos","circInOut","isZeroValueString","test","clamp","number","parse","transform","alpha","scale","default","sanitize","floatRegex","singleColorRegex","isColorString","testProp","startsWith","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","name","slice","defaultValue","functionRegex","functions","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","bottom","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","z","perspective","transformPerspective","originX","originY","originZ","numberValueTypes","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","isAsync","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","warning","invariant","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","trim","splitCSSVariableRegex","getVariableValue","depth","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","testValueType","dimensionValueTypes","findDimensionValueType","find","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","canAnimate","keyframes","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","isNotNull","getFinalKeyframe","repeat","repeatType","resolvedKeyframes","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","reject","currentFinishedPromise","activeAnimations","layout","mainThread","waapi","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","transformers","invisibleValues","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","calcGeneratorVelocity","resolveValue","prevT","springDefaults","granular","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","visualDuration","restSpeed","restDelta","isResolvedFromDuration","springOptions","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","playbackSpeed","pendingPlayState","teardown","onStop","KeyframeResolver$1","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","tick","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","supportsWaapi","unsupportedEasingFunctions","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","finally","startWaapiAnimation","pendingTimeline","playbackRate","playState","sampleTime","supports","transformTemplate","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","shallowCompare","prevLength","isVariantLabel","variantPriorityOrder","variantProps","numVariantProps","getVariantContext","isControllingVariants","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","updateAnimationControlsSubscription","unmountControls","mount","prevAnimate","unmount","arguments","prevIsPresent","prevPresenceContext","exitAnimation","addDomEvent","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","isRefObject","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","applyTo","boxShadow","compareByDepth","FlatTree","isDirty","timeout","checkElapsed","resolveMotionValue","unwrappedValue","toValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","renderState","vars","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","handleHoverEvent","lifecycle","handlePressEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","tap","_element","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","LazyContext","strict","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","onMount","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","isForcedMotionValue","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","lowercaseSVGElements","isSVGComponent","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","newValues","htmlMotionConfig","updateSVGDimensions","getBBox","renderHTML","setProperty","camelCaseAttributes","renderSVG","_styleProp","setAttribute","charAt","layoutProps","svgMotionConfig","needsMeasure","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","updateDimensions","motion","_ref","_state$logo","onClick","console","log","_jsxs","Card","as","div","warn","sx","cursor","textAlign","flexDirection","alignItems","justifyContent","logo","file","url","_jsx","Image","src","alt","Heading","fontSize","competitions","onBack","Button","website","Text","Link","href","rel","Box","gridTemplateColumns","gap","comp","_comp$poster","poster","competitionName","flexShrink","flex","location","date","CompetitionsPage","data","useStaticQuery","states","allContentfulState","allContentfulCompetition","selectedState","setSelectedState","useLocation","viewMode","setViewMode","URLSearchParams","search","filteredCompetitions","_comp$state","sortedCompetitions","_toConsumableArray","Date","Flex","mb","fontWeight","StateCard","CompetitionList","ScheduleList","fails","module","exports","METHOD_NAME","argument","method","uncurryThis","arraySlice","comparefn","j","middle","llength","rlength","lindex","rindex","TO_STRING_TAG_SUPPORT","isCallable","classofRaw","TO_STRING_TAG","wellKnownSymbol","$Object","CORRECT_ARGUMENTS","it","O","error","tryGet","callee","tryToString","$TypeError","TypeError","P","firefox","UA","webkit","String","classof","$String","$","aCallable","toObject","lengthOfArrayLike","deletePropertyOrThrow","internalSort","arrayMethodIsStrict","FF","IE_OR_EDGE","V8","WEBKIT","nativeSort","FAILS_ON_UNDEFINED","FAILS_ON_NULL","STRICT_METHOD","STABLE_SORT","code","chr","fromCharCode","k","proto","forced","itemsLength","items","arrayLength","getSortCompare"],"sourceRoot":""}